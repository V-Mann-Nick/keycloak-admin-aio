name: Install and cache poetry
description: Restores poetry from cache and if not present installs it
inputs:
  python-version:
    description: actions/setup-python python-version input
  install-dependencies:
    description: if true the .venv with the project's dependencies will be installed
    default: 'true'
outputs:
  python-version:
    description: python-version used by actions/setup-python
    value: ${{ steps.setup-python.outputs.python-version }}
runs:
  using: composite
  steps:
    - name: Set up python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
    - name: Load cached Poetry installation
      id: cached-poetry
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-0-${{ steps.setup-python.outputs.python-version }}
    - name: Install Poetry
      if: steps.cached-poetry.outputs.cache-hit != 'true'
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      if: inputs.install-dependencies == 'true'
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true' && inputs.install-dependencies == 'true'
      shell: bash
      run: poetry install --no-interaction
